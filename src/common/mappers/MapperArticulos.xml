<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="MapperArticulos">
    
    <resultMap id="resultMapItemByFolioResultQuery" type="common.model.ItemByFolioResultQuery">
        <result property="eventId" column="event_id"/>
        <result property="eventFolio" column="event_folio"/>
        <result property="itemId" column="item_id"/>
        <result property="itemAmount" column="item_amount"/>
        <result property="itemDescription" column="item_description"/>
        <result property="itemUnitPrice" column="item_unit_price"/>
        <result property="itemDiscountRate" column="item_discount_rate"/>
        <result property="eventDeliveryDate" column="event_delivery_date"/>
        <result property="eventCreatedAtDate" column="event_created_at_date"/>
        <result property="eventType" column="event_type"/>
        <result property="eventStatus" column="event_status"/>
    </resultMap>
    
    <resultMap id="resultMapAvailabilityItemResult" type="common.model.AvailabilityItemResult">
        
        <result property="numberOfItems" column="number_of_items"/>
        <result property="eventDateOrder" column="event_date_order"/>
        <result property="eventDateElaboration" column="event_date_elaboration"/>
        <result property="deliveryDateOrder" column="delivery_date_order"/>
        <result property="returnHourOrder" column="return_hour_order"/>
        <result property="deliveryHourOrder" column="delivery_hour_order"/>
        <result property="returnDateOrder" column="return_date_order"/>
        <result property="customerName" column="customer_name"/>
        
        <result property="folioOrder" column="folio_order"/>
        <result property="descriptionOrder" column="description_order"/>
        <result property="typeOrder" column="type_order"/>
        <result property="statusOrder" column="status_order"/>   
        
        <result property="item.cantidad" column="item_cantidad"/>
        <result property="item.articuloId" column="item_id"/>
        <result property="item.descripcion" column="item_description"/>
        <result property="item.color.color" column="item_color"/>
        <result property="item.codigo" column="item_codigo"/>
        <result property="item.precioCompra" column="item_purchase_amount"/>
        
        <result property="item.rentados" column="rentados" />
        <result property="item.faltantes" column="faltantes" />
        <result property="item.reparacion" column="reparacion" />
        <result property="item.accidenteTrabajo" column="accidente_trabajo" />
        <result property="item.devolucion" column="devolucion" />
        <result property="item.totalCompras" column="total_compras" />
        <result property="item.totalShopProvider" column="total_shop_provider" />
    </resultMap>
  
    <resultMap id="resultMapArticulo" type="common.model.Articulo">        
        <result property="articuloId" column="id_articulo"/>
        <result property="categoriaId" column="categoriaId"/>
        <result property="usuarioId" column="id_usuario"/>
        <!-- color -->
        <result property="color.colorId" column="id_color"/>
        <result property="color.color" column="color"/> 
        <result property="color.tono" column="tono"/> 
        <result property="color.comentario" column="comentario"/>      
        
        <result property="cantidad" column="cantidad"/>        
        <result property="descripcion" column="descripcion"/>
        <result property="fechaIngreso" column="fecha_ingreso"/>
        <result property="precioCompra" column="precio_compra"/>
        <result property="precioRenta" column="precio_renta"/>        
        <result property="activo" column="activo"/>
        <result property="stock" column="stock"/>
        <result property="codigo" column="codigo"/>        
        <result property="enRenta" column="en_renta"/>
        <result property="image" column="image"/>
        <!-- categoria -->
        <result property="categoria.categoriaId" column="id_categoria"/>        
        <result property="categoria.descripcion" column="descripcion_categoria"/>    
        <result property="fechaUltimaModificacion" column="fecha_ultima_modificacion"/>
        
        <result property="rentados" column="rentados" />
        <result property="faltantes" column="faltantes" />
        <result property="reparacion" column="reparacion" />
        <result property="accidenteTrabajo" column="accidente_trabajo" />
        <result property="devolucion" column="devolcion" />
        
        <result property="totalCompras" column="total_compras" />
        <result property="totalShopProvider" column="total_shop_provider" />

    </resultMap>
    
     <resultMap id="resultMapCategoria" type="common.model.CategoriaDTO">        
        <result property="categoriaId" column="id_categoria"/>
        <result property="descripcion" column="descripcion"/> 
    </resultMap>
    
     <resultMap id="resultMapColor" type="common.model.Color">        
        <result property="colorId" column="id_color"/>
        <result property="color" column="color"/> 
         <result property="tono" column="tono"/>
        <result property="comentario" column="comentario"/> 
    </resultMap>
    
    <select id="getItemsByFolio" resultMap="resultMapItemByFolioResultQuery" parameterType="common.model.SearchItemByFolioParams">
        SELECT
            renta.id_renta AS event_id,
            renta.folio AS event_folio,
            d.cantidad AS item_amount,
            articulo.id_articulo AS item_id,
            CONCAT(articulo.descripcion," ",c.color) AS item_description,
            d.p_unitario AS item_unit_price,
            d.porcentaje_descuento AS item_discount_rate,
            renta.fecha_pedido AS event_created_at_date,
            renta.fecha_evento AS event_delivery_date,
            tipo.tipo AS event_type,
            estado.descripcion AS event_status
        FROM detalle_renta d
        INNER JOIN articulo articulo ON (articulo.id_articulo = d.id_articulo)
        INNER JOIN renta renta ON (renta.id_renta = d.id_renta)
        INNER JOIN color c ON (c.id_color = articulo.id_color)
        INNER JOIN estado estado ON (estado.id_estado = renta.id_estado)
        INNER JOIN tipo tipo ON (tipo.id_tipo = renta.id_tipo)
        <if test="likeItemDescription != null and likeItemDescription != '' ">
            AND LOWER(CONCAT(articulo.descripcion," ",c.color)) LIKE CONCAT('%',#{likeItemDescription},'%')
        </if>
        <if test="folio != null and folio != '' ">
            AND renta.folio = #{folio}
        </if>   
        <if test="eventTypeId != null and eventTypeId != '' and eventTypeId != 0 ">
            AND tipo.id_tipo = #{eventTypeId}
        </if>
        <if test="initialEventDate != null and endEventDate != null ">
            AND STR_TO_DATE(renta.fecha_evento,'%d/%m/%Y') BETWEEN STR_TO_DATE(#{initialEventDate},'%d/%m/%Y') AND STR_TO_DATE(#{endEventDate},'%d/%m/%Y')
        </if>
        <if test="initCreatedAtEvent != null and endCreatedAtEvent != null ">
            AND STR_TO_DATE(renta.fecha_pedido,'%d/%m/%Y') BETWEEN STR_TO_DATE(#{initCreatedAtEvent},'%d/%m/%Y') AND STR_TO_DATE(#{endCreatedAtEvent},'%d/%m/%Y')
        </if>
        <if test="eventStatusId != null and eventStatusId != '' and eventStatusId != 0 ">
            AND renta.id_estado = #{eventStatusId}
        </if>
        ORDER BY d.id_detalle_renta DESC
        LIMIT #{limit}
    </select>
    
    <select id="obtenerRentaPorDisponibilidad" resultMap="resultMapAvailabilityItemResult" parameterType="java.util.Map">
        SELECT
            detalle.cantidad AS number_of_items,
            renta.fecha_evento AS event_date_order,
            renta.fecha_pedido AS event_date_elaboration,
            renta.fecha_entrega AS delivery_date_order,
            renta.hora_devolucion AS return_hour_order,
            renta.hora_entrega AS delivery_hour_order,
            renta.fecha_devolucion AS return_date_order,
            CONCAT(clientes.nombre," ",clientes.apellidos) AS customer_name,
            renta.folio AS folio_order,
            renta.descripcion AS description_order,
            tipo.tipo AS type_order,
            estado.descripcion AS status_order,
            articulo.id_articulo AS item_id,
            articulo.cantidad AS item_cantidad,
            articulo.descripcion AS item_description,
            articulo.precio_compra AS item_purchase_amount,
            color.color AS item_color,
            articulo.codigo AS item_codigo,
            (
                SELECT SUM(d.cantidad) AS cantidad
                FROM renta r
                    INNER JOIN detalle_renta d ON (d.id_renta = r.id_renta)
                WHERE d.id_articulo = detalle.id_articulo
                AND r.id_renta = detalle.id_renta
                AND r.id_estado = #{estado_en_renta_id}
                AND r.id_tipo = #{tipo_pedido_id}
            ) AS rentados,
            (
                SELECT SUM(faltante.cantidad)
                FROM faltantes faltante
                WHERE faltante.id_articulo = detalle.id_articulo
                AND faltante.fg_faltante = '1'
                AND faltante.fg_devolucion = '0'
                AND faltante.fg_accidente_trabajo = '0'
                AND faltante.fg_activo = '1'
            ) AS faltantes,
            (
                SELECT 
                    SUM(faltante.cantidad)
                FROM faltantes faltante              
                WHERE faltante.id_articulo = detalle.id_articulo
                AND faltante.fg_faltante = '0'
                AND faltante.fg_devolucion = '0'
                AND faltante.fg_accidente_trabajo = '0'
                AND faltante.fg_activo = '1'
            ) AS reparacion,
            (
                SELECT 
                    SUM(faltante.cantidad)
                FROM faltantes faltante              
                WHERE faltante.id_articulo = detalle.id_articulo
                AND faltante.fg_faltante = '0'
                AND faltante.fg_devolucion = '0'
                AND faltante.fg_accidente_trabajo = '1'
                AND faltante.fg_activo = '1'
            ) AS accidente_trabajo,
            (
                SELECT
                    SUM(faltante.cantidad)
                FROM faltantes faltante         
                WHERE faltante.id_articulo = detalle.id_articulo
                AND faltante.fg_devolucion = '1'
                AND faltante.fg_faltante = '0'
                AND faltante.fg_activo = '1'
            ) AS devolucion,
            (
                SELECT
                    SUM(compras.cantidad)
                FROM compras compras
                WHERE compras.id_articulo = detalle.id_articulo
                AND compras.fg_activo = '1' 
            ) AS total_compras,
            (
                SELECT 
                    SUM(detalle_orden_proveedor.cantidad)
                FROM detalle_orden_proveedor detalle_orden_proveedor
                    INNER JOIN orden_proveedor orden_proveedor ON (orden_proveedor.id = detalle_orden_proveedor.id_orden_proveedor)
                WHERE detalle_orden_proveedor.fg_activo = '1'
                AND detalle_orden_proveedor.id_articulo = articulo.id_articulo
                AND orden_proveedor.status = #{statusOrder} OR orden_proveedor.status = #{statusOrderFinish}
                AND detalle_orden_proveedor.tipo_orden_detalle_proveedor_id = #{typeOrderDetail}
            ) AS total_shop_provider
        FROM detalle_renta detalle
            INNER JOIN renta renta ON (renta.id_renta = detalle.id_renta)
            INNER JOIN estado estado ON (estado.id_estado = renta.id_estado)
            INNER JOIN clientes clientes ON (clientes.id_clientes = renta.id_clientes)
            INNER JOIN tipo tipo ON (tipo.id_tipo = renta.id_tipo)
            INNER JOIN articulo articulo ON (detalle.id_articulo = articulo.id_articulo)
            INNER JOIN color color ON (color.id_color = articulo.id_color)
        WHERE
            STR_TO_DATE(renta.fecha_entrega,'%d/%m/%Y') BETWEEN STR_TO_DATE(#{initDate},'%d/%m/%Y') AND STR_TO_DATE(#{endDate},'%d/%m/%Y')
            <choose>
                <when test="includeRentaId != null">
                  AND renta.id_renta IN (
                    SELECT renta_in_1.id_renta
                    FROM renta AS renta_in_1
                    WHERE renta_in_1.id_renta = #{includeRentaId}
                    UNION
                    SELECT renta_in.id_renta 
                    FROM renta AS renta_in
                    WHERE renta_in.id_tipo = #{tipo_pedido_id}
                    AND renta_in.id_estado IN (#{estado_apartado_id},#{estado_en_renta_id})
                  )
                </when>
                <otherwise>
                  AND renta.id_tipo = #{tipo_pedido_id}
                  AND renta.id_estado IN (#{estado_apartado_id},#{estado_en_renta_id})
                </otherwise>
            </choose>
            <if test="filterByItems != null">
                <foreach item="item" index="index" collection="filterByItems"
                    open="AND detalle.id_articulo IN (" separator="," close=")" >
                        #{item}
                </foreach>
            </if>
        UNION
        SELECT
            detalle.cantidad AS number_of_items,
            renta.fecha_evento AS event_date_order,
            renta.fecha_pedido AS event_date_elaboration,
            renta.fecha_entrega AS delivery_date_order,
            renta.hora_devolucion AS return_hour_order,
            renta.hora_entrega AS delivery_hour_order,
            renta.fecha_devolucion AS return_date_order,
            CONCAT(clientes.nombre," ",clientes.apellidos) AS customer_name,
            renta.folio AS folio_order,
            renta.descripcion AS description_order,
            tipo.tipo AS type_order,
            estado.descripcion AS status_order,
            articulo.id_articulo AS item_id,
            articulo.cantidad AS item_cantidad,
            articulo.descripcion AS item_description,
            articulo.precio_compra AS item_purchase_amount,
            color.color AS item_color,
            articulo.codigo AS item_codigo,
            (
                SELECT SUM(d.cantidad) AS cantidad
                FROM renta r
                    INNER JOIN detalle_renta d ON (d.id_renta = r.id_renta)
                WHERE d.id_articulo = detalle.id_articulo
                AND r.id_renta = detalle.id_renta
                AND r.id_estado = #{estado_en_renta_id}
                AND r.id_tipo = #{tipo_pedido_id}
            ) AS rentados,
            (
                SELECT SUM(faltante.cantidad)
                FROM faltantes faltante
                WHERE faltante.id_articulo = detalle.id_articulo
                AND faltante.fg_faltante = '1'
                AND faltante.fg_devolucion = '0'
                AND faltante.fg_accidente_trabajo = '0'
                AND faltante.fg_activo = '1'
            ) AS faltantes,
            (
                SELECT 
                    SUM(faltante.cantidad)
                FROM faltantes faltante              
                WHERE faltante.id_articulo = detalle.id_articulo
                AND faltante.fg_faltante = '0'
                AND faltante.fg_devolucion = '0'
                AND faltante.fg_accidente_trabajo = '0'
                AND faltante.fg_activo = '1'
            ) AS reparacion,
            (
                SELECT 
                    SUM(faltante.cantidad)
                FROM faltantes faltante              
                WHERE faltante.id_articulo = detalle.id_articulo
                AND faltante.fg_faltante = '0'
                AND faltante.fg_devolucion = '0'
                AND faltante.fg_accidente_trabajo = '1'
                AND faltante.fg_activo = '1'
            ) AS accidente_trabajo,
            (
                SELECT
                    SUM(faltante.cantidad)
                FROM faltantes faltante         
                WHERE faltante.id_articulo = detalle.id_articulo
                AND faltante.fg_devolucion = '1'
                AND faltante.fg_faltante = '0'
                AND faltante.fg_activo = '1'
            ) AS devolucion,
            (
                SELECT
                    SUM(compras.cantidad)
                FROM compras compras
                WHERE compras.id_articulo = detalle.id_articulo
                AND compras.fg_activo = '1' 
            ) AS total_compras,
            (
                SELECT 
                    SUM(detalle_orden_proveedor.cantidad)
                FROM detalle_orden_proveedor detalle_orden_proveedor
                    INNER JOIN orden_proveedor orden_proveedor ON (orden_proveedor.id = detalle_orden_proveedor.id_orden_proveedor)
                WHERE detalle_orden_proveedor.fg_activo = '1'
                AND detalle_orden_proveedor.id_articulo = articulo.id_articulo
                AND orden_proveedor.status = #{statusOrder} OR orden_proveedor.status = #{statusOrderFinish}
                AND detalle_orden_proveedor.tipo_orden_detalle_proveedor_id = #{typeOrderDetail}
            ) AS total_shop_provider
        FROM detalle_renta detalle
            INNER JOIN renta renta ON (renta.id_renta = detalle.id_renta)
            INNER JOIN estado estado ON (estado.id_estado = renta.id_estado)
            INNER JOIN clientes clientes ON (clientes.id_clientes = renta.id_clientes)
            INNER JOIN tipo tipo ON (tipo.id_tipo = renta.id_tipo)
            INNER JOIN articulo articulo ON (detalle.id_articulo = articulo.id_articulo)
            INNER JOIN color color ON (color.id_color = articulo.id_color)
        WHERE
            STR_TO_DATE(renta.fecha_devolucion,'%d/%m/%Y') BETWEEN STR_TO_DATE(#{initDate},'%d/%m/%Y') AND STR_TO_DATE(#{endDate},'%d/%m/%Y')
            <choose>
                <when test="includeRentaId != null">
                  AND renta.id_renta IN (
                    SELECT renta_in_1.id_renta
                    FROM renta AS renta_in_1
                    WHERE renta_in_1.id_renta = #{includeRentaId}
                    UNION
                    SELECT renta_in.id_renta 
                    FROM renta AS renta_in
                    WHERE renta_in.id_tipo = #{tipo_pedido_id}
                    AND renta_in.id_estado IN (#{estado_apartado_id},#{estado_en_renta_id})
                  )
                </when>
                <otherwise>
                  AND renta.id_tipo = #{tipo_pedido_id}
                  AND renta.id_estado IN (#{estado_apartado_id},#{estado_en_renta_id})
                </otherwise>
            </choose>
            <if test="filterByItems != null">
                <foreach item="item" index="index" collection="filterByItems"
                    open="AND detalle.id_articulo IN (" separator="," close=")" >
                        #{item}
                </foreach>
            </if>
        UNION
        SELECT
            detalle.cantidad AS number_of_items,
            renta.fecha_evento AS event_date_order,
            renta.fecha_pedido AS event_date_elaboration,
            renta.fecha_entrega AS delivery_date_order,
            renta.hora_devolucion AS return_hour_order,
            renta.hora_entrega AS delivery_hour_order,
            renta.fecha_devolucion AS return_date_order,
            CONCAT(clientes.nombre," ",clientes.apellidos) AS customer_name,
            renta.folio AS folio_order,
            renta.descripcion AS description_order,
            tipo.tipo AS type_order,
            estado.descripcion AS status_order,
            articulo.id_articulo AS item_id,
            articulo.cantidad AS item_cantidad,
            articulo.descripcion AS item_description,
            articulo.precio_compra AS item_purchase_amount,
            color.color AS item_color,
            articulo.codigo AS item_codigo,
            (
                SELECT SUM(d.cantidad) AS cantidad
                FROM renta r
                    INNER JOIN detalle_renta d ON (d.id_renta = r.id_renta)
                WHERE d.id_articulo = detalle.id_articulo
                AND r.id_renta = detalle.id_renta
                AND r.id_estado = #{estado_en_renta_id}
                AND r.id_tipo = #{tipo_pedido_id}
            ) AS rentados,
            (
                SELECT SUM(faltante.cantidad)
                FROM faltantes faltante
                WHERE faltante.id_articulo = detalle.id_articulo
                AND faltante.fg_faltante = '1'
                AND faltante.fg_devolucion = '0'
                AND faltante.fg_accidente_trabajo = '0'
                AND faltante.fg_activo = '1'
            ) AS faltantes,
            (
                SELECT 
                    SUM(faltante.cantidad)
                FROM faltantes faltante              
                WHERE faltante.id_articulo = detalle.id_articulo
                AND faltante.fg_faltante = '0'
                AND faltante.fg_devolucion = '0'
                AND faltante.fg_accidente_trabajo = '0'
                AND faltante.fg_activo = '1'
            ) AS reparacion,
            (
                SELECT 
                    SUM(faltante.cantidad)
                FROM faltantes faltante              
                WHERE faltante.id_articulo = detalle.id_articulo
                AND faltante.fg_faltante = '0'
                AND faltante.fg_devolucion = '0'
                AND faltante.fg_accidente_trabajo = '1'
                AND faltante.fg_activo = '1'
            ) AS accidente_trabajo,
            (
                SELECT
                    SUM(faltante.cantidad)
                FROM faltantes faltante         
                WHERE faltante.id_articulo = detalle.id_articulo
                AND faltante.fg_devolucion = '1'
                AND faltante.fg_faltante = '0'
                AND faltante.fg_activo = '1'
            ) AS devolucion,
            (
                SELECT
                    SUM(compras.cantidad)
                FROM compras compras
                WHERE compras.id_articulo = detalle.id_articulo
                AND compras.fg_activo = '1' 
            ) AS total_compras,
            (
                SELECT 
                    SUM(detalle_orden_proveedor.cantidad)
                FROM detalle_orden_proveedor detalle_orden_proveedor
                    INNER JOIN orden_proveedor orden_proveedor ON (orden_proveedor.id = detalle_orden_proveedor.id_orden_proveedor)
                WHERE detalle_orden_proveedor.fg_activo = '1'
                AND detalle_orden_proveedor.id_articulo = articulo.id_articulo
                AND orden_proveedor.status = #{statusOrder} OR orden_proveedor.status = #{statusOrderFinish}
                AND detalle_orden_proveedor.tipo_orden_detalle_proveedor_id = #{typeOrderDetail}
            ) AS total_shop_provider
        FROM detalle_renta detalle
            INNER JOIN renta renta ON (renta.id_renta = detalle.id_renta)
            INNER JOIN estado estado ON (estado.id_estado = renta.id_estado)
            INNER JOIN clientes clientes ON (clientes.id_clientes = renta.id_clientes)
            INNER JOIN tipo tipo ON (tipo.id_tipo = renta.id_tipo)
            INNER JOIN articulo articulo ON (detalle.id_articulo = articulo.id_articulo)
            INNER JOIN color color ON (color.id_color = articulo.id_color)
        WHERE
            STR_TO_DATE(#{endDate},'%d/%m/%Y') BETWEEN STR_TO_DATE(renta.fecha_entrega,'%d/%m/%Y') AND STR_TO_DATE(renta.fecha_devolucion,'%d/%m/%Y')
            <choose>
                <when test="includeRentaId != null">
                  AND renta.id_renta IN (
                    SELECT renta_in_1.id_renta
                    FROM renta AS renta_in_1
                    WHERE renta_in_1.id_renta = #{includeRentaId}
                    UNION
                    SELECT renta_in.id_renta 
                    FROM renta AS renta_in
                    WHERE renta_in.id_tipo = #{tipo_pedido_id}
                    AND renta_in.id_estado IN (#{estado_apartado_id},#{estado_en_renta_id})
                  )
                </when>
                <otherwise>
                  AND renta.id_tipo = #{tipo_pedido_id}
                  AND renta.id_estado IN (#{estado_apartado_id},#{estado_en_renta_id})
                </otherwise>
            </choose>
            <if test="filterByItems != null">
                <foreach item="item" index="index" collection="filterByItems"
                    open="AND detalle.id_articulo IN (" separator="," close=")" >
                        #{item}
                </foreach>
            </if>
    </select>
    
        <!-- Esta consulta se ocupa en disponibilidad -->
    <select id="obtenerRentaPorDisponibilidadPorFechaDeEntrega" resultMap="resultMapAvailabilityItemResult" parameterType="java.util.Map">
        SELECT
            detalle.cantidad AS number_of_items,
            renta.fecha_evento AS event_date_order,
            renta.fecha_pedido AS event_date_elaboration,
            renta.fecha_entrega AS delivery_date_order,
            renta.hora_devolucion AS return_hour_order,
            renta.hora_entrega AS delivery_hour_order,
            renta.fecha_devolucion AS return_date_order,
            CONCAT(clientes.nombre," ",clientes.apellidos) AS customer_name,
            renta.folio AS folio_order,
            renta.descripcion AS description_order,
            tipo.tipo AS type_order,
            estado.descripcion AS status_order,
            articulo.id_articulo AS item_id,
            articulo.cantidad AS item_cantidad,
            articulo.descripcion AS item_description,
            articulo.precio_compra AS item_purchase_amount,
            color.color AS item_color,
            articulo.codigo AS item_codigo,
            (
                SELECT SUM(d.cantidad) AS cantidad
                FROM renta r
                    INNER JOIN detalle_renta d ON (d.id_renta = r.id_renta)
                WHERE d.id_articulo = detalle.id_articulo
                AND r.id_renta = detalle.id_renta
                AND r.id_estado = #{estado_en_renta_id}
                AND r.id_tipo = #{tipo_pedido_id}
            ) AS rentados,
            (
                SELECT SUM(faltante.cantidad)
                FROM faltantes faltante
                WHERE faltante.id_articulo = detalle.id_articulo
                AND faltante.fg_faltante = '1'
                AND faltante.fg_devolucion = '0'
                AND faltante.fg_accidente_trabajo = '0'
                AND faltante.fg_activo = '1'
            ) AS faltantes,
            (
                SELECT 
                    SUM(faltante.cantidad)
                FROM faltantes faltante              
                WHERE faltante.id_articulo = detalle.id_articulo
                AND faltante.fg_faltante = '0'
                AND faltante.fg_devolucion = '0'
                AND faltante.fg_accidente_trabajo = '0'
                AND faltante.fg_activo = '1'
            ) AS reparacion,
            (
                SELECT 
                    SUM(faltante.cantidad)
                FROM faltantes faltante              
                WHERE faltante.id_articulo = detalle.id_articulo
                AND faltante.fg_faltante = '0'
                AND faltante.fg_devolucion = '0'
                AND faltante.fg_accidente_trabajo = '1'
                AND faltante.fg_activo = '1'
            ) AS accidente_trabajo,
            (
                SELECT
                    SUM(faltante.cantidad)
                FROM faltantes faltante         
                WHERE faltante.id_articulo = detalle.id_articulo
                AND faltante.fg_devolucion = '1'
                AND faltante.fg_faltante = '0'
                AND faltante.fg_activo = '1'
            ) AS devolucion,
            (
                SELECT
                    SUM(compras.cantidad)
                FROM compras compras
                WHERE compras.id_articulo = detalle.id_articulo
                AND compras.fg_activo = '1' 
            ) AS total_compras,
            (
                SELECT 
                    SUM(detalle_orden_proveedor.cantidad)
                FROM detalle_orden_proveedor detalle_orden_proveedor
                    INNER JOIN orden_proveedor orden_proveedor ON (orden_proveedor.id = detalle_orden_proveedor.id_orden_proveedor)
                WHERE detalle_orden_proveedor.fg_activo = '1'
                AND detalle_orden_proveedor.id_articulo = articulo.id_articulo
                AND orden_proveedor.status = #{statusOrder} OR orden_proveedor.status = #{statusOrderFinish}
                AND detalle_orden_proveedor.tipo_orden_detalle_proveedor_id = #{typeOrderDetail}
            ) AS total_shop_provider
        FROM detalle_renta detalle
            INNER JOIN renta renta ON (renta.id_renta = detalle.id_renta)
            INNER JOIN estado estado ON (estado.id_estado = renta.id_estado)
            INNER JOIN clientes clientes ON (clientes.id_clientes = renta.id_clientes)
            INNER JOIN tipo tipo ON (tipo.id_tipo = renta.id_tipo)
            INNER JOIN articulo articulo ON (detalle.id_articulo = articulo.id_articulo)
            INNER JOIN color color ON (color.id_color = articulo.id_color)
        WHERE
            STR_TO_DATE(renta.fecha_entrega,'%d/%m/%Y') BETWEEN STR_TO_DATE(#{initDate},'%d/%m/%Y') AND STR_TO_DATE(#{endDate},'%d/%m/%Y')
            <choose>
                <when test="includeRentaId != null">
                  AND renta.id_renta IN (
                    SELECT renta_in_1.id_renta
                    FROM renta AS renta_in_1
                    WHERE renta_in_1.id_renta = #{includeRentaId}
                    UNION
                    SELECT renta_in.id_renta 
                    FROM renta AS renta_in
                    WHERE renta_in.id_tipo = #{tipo_pedido_id}
                    AND renta_in.id_estado IN (#{estado_apartado_id},#{estado_en_renta_id})
                  )
                </when>
                <otherwise>
                  AND renta.id_tipo = #{tipo_pedido_id}
                  AND renta.id_estado IN (#{estado_apartado_id},#{estado_en_renta_id})
                </otherwise>
            </choose>
            <if test="filterByItems != null">
                <foreach item="item" index="index" collection="filterByItems"
                    open="AND detalle.id_articulo IN (" separator="," close=")" >
                        #{item}
                </foreach>
            </if>
    </select>
    
    <!-- Esta consulta se ocupa en disponibilidad -->
    <select id="obtenerRentaPorDisponibilidadPorFechaDeDevolucion" resultMap="resultMapAvailabilityItemResult" parameterType="java.util.Map">
        SELECT
            detalle.cantidad AS number_of_items,
            renta.fecha_evento AS event_date_order,
            renta.fecha_pedido AS event_date_elaboration,
            renta.fecha_entrega AS delivery_date_order,
            renta.hora_devolucion AS return_hour_order,
            renta.hora_entrega AS delivery_hour_order,
            renta.fecha_devolucion AS return_date_order,
            CONCAT(clientes.nombre," ",clientes.apellidos) AS customer_name,
            renta.folio AS folio_order,
            renta.descripcion AS description_order,
            tipo.tipo AS type_order,
            estado.descripcion AS status_order,
            articulo.id_articulo AS item_id,
            articulo.cantidad AS item_cantidad,
            articulo.descripcion AS item_description,
            articulo.precio_compra AS item_purchase_amount,
            color.color AS item_color,
            articulo.codigo AS item_codigo,
            (
                SELECT SUM(d.cantidad) AS cantidad
                FROM renta r
                    INNER JOIN detalle_renta d ON (d.id_renta = r.id_renta)
                WHERE d.id_articulo = detalle.id_articulo
                AND r.id_renta = detalle.id_renta
                AND r.id_estado = #{estado_en_renta_id}
                AND r.id_tipo = #{tipo_pedido_id}
            ) AS rentados,
            (
                SELECT SUM(faltante.cantidad)
                FROM faltantes faltante
                WHERE faltante.id_articulo = detalle.id_articulo
                AND faltante.fg_faltante = '1'
                AND faltante.fg_devolucion = '0'
                AND faltante.fg_accidente_trabajo = '0'
                AND faltante.fg_activo = '1'
            ) AS faltantes,
            (
                SELECT 
                    SUM(faltante.cantidad)
                FROM faltantes faltante              
                WHERE faltante.id_articulo = detalle.id_articulo
                AND faltante.fg_faltante = '0'
                AND faltante.fg_devolucion = '0'
                AND faltante.fg_accidente_trabajo = '0'
                AND faltante.fg_activo = '1'
            ) AS reparacion,
            (
                SELECT 
                    SUM(faltante.cantidad)
                FROM faltantes faltante              
                WHERE faltante.id_articulo = detalle.id_articulo
                AND faltante.fg_faltante = '0'
                AND faltante.fg_devolucion = '0'
                AND faltante.fg_accidente_trabajo = '1'
                AND faltante.fg_activo = '1'
            ) AS accidente_trabajo,
            (
                SELECT
                    SUM(faltante.cantidad)
                FROM faltantes faltante         
                WHERE faltante.id_articulo = detalle.id_articulo
                AND faltante.fg_devolucion = '1'
                AND faltante.fg_faltante = '0'
                AND faltante.fg_activo = '1'
            ) AS devolucion,
            (
                SELECT
                    SUM(compras.cantidad)
                FROM compras compras
                WHERE compras.id_articulo = detalle.id_articulo
                AND compras.fg_activo = '1' 
            ) AS total_compras,
            (
                SELECT 
                    SUM(detalle_orden_proveedor.cantidad)
                FROM detalle_orden_proveedor detalle_orden_proveedor
                    INNER JOIN orden_proveedor orden_proveedor ON (orden_proveedor.id = detalle_orden_proveedor.id_orden_proveedor)
                WHERE detalle_orden_proveedor.fg_activo = '1'
                AND detalle_orden_proveedor.id_articulo = articulo.id_articulo
                AND orden_proveedor.status = #{statusOrder} OR orden_proveedor.status = #{statusOrderFinish}
                AND detalle_orden_proveedor.tipo_orden_detalle_proveedor_id = #{typeOrderDetail}
            ) AS total_shop_provider
        FROM detalle_renta detalle
            INNER JOIN renta renta ON (renta.id_renta = detalle.id_renta)
            INNER JOIN estado estado ON (estado.id_estado = renta.id_estado)
            INNER JOIN clientes clientes ON (clientes.id_clientes = renta.id_clientes)
            INNER JOIN tipo tipo ON (tipo.id_tipo = renta.id_tipo)
            INNER JOIN articulo articulo ON (detalle.id_articulo = articulo.id_articulo)
            INNER JOIN color color ON (color.id_color = articulo.id_color)
        WHERE
            STR_TO_DATE(renta.fecha_devolucion,'%d/%m/%Y') BETWEEN STR_TO_DATE(#{initDate},'%d/%m/%Y') AND STR_TO_DATE(#{endDate},'%d/%m/%Y')
            AND renta.id_tipo = #{tipo_pedido_id}
            AND renta.id_estado IN (#{estado_apartado_id},#{estado_en_renta_id})
            <choose>
                <when test="includeRentaId != null">
                  AND renta.id_renta IN (
                    SELECT renta_in_1.id_renta
                    FROM renta AS renta_in_1
                    WHERE renta_in_1.id_renta = #{includeRentaId}
                    UNION
                    SELECT renta_in.id_renta 
                    FROM renta AS renta_in
                    WHERE renta_in.id_tipo = #{tipo_pedido_id}
                    AND renta_in.id_estado IN (#{estado_apartado_id},#{estado_en_renta_id})
                  )
                </when>
                <otherwise>
                  AND renta.id_tipo = #{tipo_pedido_id}
                  AND renta.id_estado IN (#{estado_apartado_id},#{estado_en_renta_id})
                </otherwise>
            </choose>
            <if test="filterByItems != null">
                <foreach item="item" index="index" collection="filterByItems"
                    open="AND detalle.id_articulo IN (" separator="," close=")" >
                        #{item}
                </foreach>
            </if>
    </select>
    
    <select id="obtenerArticuloPorId" resultMap="resultMapArticulo" parameterType="java.lang.Integer">
        SELECT articulo.*, 
        categoria.descripcion AS descripcion_categoria, 
        color.color, color.tono, color.comentario       
        FROM articulo articulo
        INNER JOIN categoria categoria ON (categoria.id_categoria = articulo.id_categoria)
        INNER JOIN color color ON (color.id_color = articulo.id_color )
        WHERE articulo.activo = 1   
        AND articulo.id_articulo = #{id}     
    </select> 
    
    <select id="obtenerArticulosActivos" resultMap="resultMapArticulo">
        SELECT articulo.*, 
            categoria.descripcion AS descripcion_categoria, 
            color.color
        FROM articulo articulo
            INNER JOIN categoria categoria ON (categoria.id_categoria = articulo.id_categoria)
            INNER JOIN color color ON (color.id_color = articulo.id_color )
        WHERE articulo.activo = 1
        ORDER BY articulo.descripcion
    </select>  
  
    <select id="obtenerArticulosBusquedaInventario" resultMap="resultMapArticulo" parameterType="java.util.Map">
        SELECT articulo.*, 
            categoria.descripcion AS descripcion_categoria, 
            color.color,
            (
                SELECT
                    SUM(detalle.cantidad) AS cantidad
                FROM renta renta
                    INNER JOIN detalle_renta detalle ON (detalle.id_renta = renta.id_renta)
                WHERE detalle.id_articulo = articulo.id_articulo
                AND renta.id_estado = #{estado_renta}
                AND renta.id_tipo = #{tipo_pedido}
            ) AS rentados,
            (
                SELECT 
                    SUM(faltante.cantidad)
                FROM faltantes faltante    
                WHERE faltante.id_articulo = articulo.id_articulo
                AND faltante.fg_faltante = '1'
                AND faltante.fg_devolucion = '0'
                AND faltante.fg_accidente_trabajo = '0'
                AND faltante.fg_activo = '1'
            ) AS faltantes,
            (
                SELECT 
                    SUM(faltante.cantidad)
                FROM faltantes faltante              
                WHERE faltante.id_articulo = articulo.id_articulo
                AND faltante.fg_faltante = '0'
                AND faltante.fg_devolucion = '0'
                AND faltante.fg_accidente_trabajo = '0'
                AND faltante.fg_activo = '1'
            ) AS reparacion,
            (
                SELECT 
                    SUM(faltante.cantidad)
                FROM faltantes faltante              
                WHERE faltante.id_articulo = articulo.id_articulo
                AND faltante.fg_faltante = '0'
                AND faltante.fg_devolucion = '0'
                AND faltante.fg_accidente_trabajo = '1'
                AND faltante.fg_activo = '1'
            ) AS accidente_trabajo,
            (
                SELECT
                    SUM(faltante.cantidad)
                FROM faltantes faltante         
                WHERE faltante.id_articulo = articulo.id_articulo
                AND faltante.fg_devolucion = '1'
                AND faltante.fg_faltante = '0'
                AND faltante.fg_activo = '1'
            ) AS devolucion,
            (
                SELECT
                    SUM(compras.cantidad)
                FROM compras compras
                WHERE compras.id_articulo = articulo.id_articulo
                AND compras.fg_activo = '1' 
            ) AS total_compras,
            (
                SELECT 
                    SUM(detalle_orden_proveedor.cantidad)
                FROM detalle_orden_proveedor detalle_orden_proveedor
                    INNER JOIN orden_proveedor orden_proveedor ON (orden_proveedor.id = detalle_orden_proveedor.id_orden_proveedor)
                WHERE detalle_orden_proveedor.fg_activo = '1'
                AND detalle_orden_proveedor.id_articulo = articulo.id_articulo
                AND orden_proveedor.status = #{statusOrder} OR orden_proveedor.status = #{statusOrderFinish}
                AND detalle_orden_proveedor.tipo_orden_detalle_proveedor_id = #{typeOrderDetail}
            ) AS total_shop_provider
        FROM articulo articulo
            INNER JOIN categoria categoria ON (categoria.id_categoria = articulo.id_categoria)
            INNER JOIN color color ON (color.id_color = articulo.id_color )
        WHERE articulo.activo = 1
        <if test="categoria != null and categoria.categoriaId != 0 ">
            AND categoria.id_categoria = #{categoria.categoriaId}
        </if>
        <if test="color != null and color.colorId != 0 ">
            AND color.id_color = #{color.colorId}
        </if>
        <if test="descripcion != null and descripcion != '' ">
            AND articulo.descripcion LIKE CONCAT('%',#{descripcion},'%')
        </if>
        ORDER BY articulo.descripcion
    </select>  
    
    <select id="obtenerEnRenta" parameterType="java.util.Map" resultType="java.lang.String">
        SELECT SUM(detalle.cantidad)AS cantidad
        FROM renta renta
        INNER JOIN detalle_renta detalle ON (detalle.id_renta = renta.id_renta)
        WHERE detalle.id_articulo = #{articuloId}
        AND renta.id_estado = #{estado_renta}
        AND renta.id_tipo = #{tipo_pedido}
    </select>
    
    <select id="obtenerFaltantes" parameterType="java.util.Map" resultType="java.lang.String">
        SELECT SUM(faltante.cantidad)AS cantidad
        FROM faltantes faltante    
        WHERE faltante.id_articulo = #{articuloId} 
        AND faltante.fg_faltante = '1'
        AND faltante.fg_devolucion = '0'
        AND faltante.fg_accidente_trabajo = '0'
        AND faltante.fg_activo = '1'
    </select>
    
    <select id="obtenerReparacion" parameterType="java.util.Map" resultType="java.lang.String">
        SELECT SUM(faltante.cantidad)AS cantidad
        FROM faltantes faltante              
        WHERE faltante.id_articulo = #{articuloId}  
        AND faltante.fg_faltante = '0'
        AND faltante.fg_devolucion = '0'
        AND faltante.fg_accidente_trabajo = '0'
        AND faltante.fg_activo = '1'
    </select>
    
    <select id="obtenerAccidenteTrabajo" parameterType="java.util.Map" resultType="java.lang.String">
        SELECT SUM(faltante.cantidad)AS cantidad
        FROM faltantes faltante              
        WHERE faltante.id_articulo = #{articuloId}   
        AND faltante.fg_faltante = '0'
        AND faltante.fg_devolucion = '0'
        AND faltante.fg_accidente_trabajo = '1'
        AND faltante.fg_activo = '1'
    </select>
    
     <select id="obtenerDevolucion" parameterType="java.util.Map" resultType="java.lang.String">
        SELECT SUM(faltante.cantidad)AS cantidad
        FROM faltantes faltante         
        WHERE faltante.id_articulo = #{articuloId}
        AND faltante.fg_devolucion = '1'
        AND faltante.fg_faltante = '0'
        AND faltante.fg_activo = '1'
    </select>
    
    <select id="obtenerCategoriaPorDescripcion" parameterType="java.lang.String" resultMap="resultMapCategoria">
        SELECT * 
        FROM categoria 
        WHERE descripcion = #{descripcion}        
    </select>
    
    <select id="obtenerColorPorDescripcion" parameterType="java.lang.String" resultMap="resultMapColor">
        SELECT * 
        FROM color 
        WHERE color = #{descripcion}        
    </select>
    <insert id="insertarArticulo" parameterType="common.model.Articulo" useGeneratedKeys="true" keyProperty="articuloId">
        INSERT INTO articulo
        (
            id_categoria,
            id_usuario,
            cantidad,
            descripcion,
            id_color,
            fecha_ingreso,
            precio_compra,
            precio_renta,  
            activo,           
            codigo,
            image
        )        
        VALUES
        (
            #{categoria.categoriaId},
            #{usuarioId},
            #{cantidad},
            #{descripcion},
            #{color.colorId},
            #{fechaIngreso},
            #{precioCompra},
            #{precioRenta},
            #{activo},
            #{codigo},
            #{image}
        )
    </insert>
    
    <update id="actualizarArticulo" parameterType="common.model.Articulo">
        UPDATE articulo
        <set>
            <if test="categoria != null and categoria.categoriaId != null">id_categoria = #{categoria.categoriaId},</if>
            <if test="cantidad != null">cantidad = #{cantidad},</if>
            <if test="descripcion != null">descripcion = #{descripcion},</if>
            <if test="color != null and color.colorId != null">id_color = #{color.colorId},</if>            
            <if test="precioCompra != null">precio_compra = #{precioCompra},</if>
            <if test="precioRenta != null">precio_renta = #{precioRenta},</if>
            <if test="codigo != null">codigo = #{codigo},</if> 
            <if test="activo != null and activo != '' ">activo = #{activo},</if>
            <if test="fechaUltimaModificacion != null ">fecha_ultima_modificacion = #{fechaUltimaModificacion},</if>
            <if test="image != null ">image = #{image}</if>
        </set>       
        WHERE id_articulo = #{articuloId}
    </update>
    <select id="obtenerColores" resultMap="resultMapColor">
        SELECT * FROM color ORDER BY color
    </select>
  
</mapper>